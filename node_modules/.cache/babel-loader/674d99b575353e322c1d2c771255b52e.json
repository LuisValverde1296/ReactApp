{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\luis-app\\\\src\\\\components\\\\BMICalculatorApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useBMI } from '../hooks/useBMI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BMICalculatorApp = () => {\n  _s();\n\n  const [inputHeight, setinputHeight] = useState(0);\n  const [inputWeight, setinputWeight] = useState(0);\n  const [state, setState] = useState({\n    bmi: 0,\n    status: \"Normal weight\"\n  });\n\n  const handleWeightChange = e => {\n    setinputWeight(e.target.value);\n    handleInputChange(inputHeight, inputWeight);\n  };\n\n  const handleHeightChange = e => {\n    setinputHeight(e.target.value);\n    handleInputChange(inputHeight, inputWeight);\n  };\n\n  const handleInputChange = (height, weight) => {};\n\n  useEffect((height, weight) => {\n    calculateBMI(height, weight).then(state => {\n      setState({\n        bmi: state.bmi,\n        status: state.status\n      });\n    });\n  }, [height, weight]);\n  const {\n    bmi,\n    status\n  } = useBMI(inputHeight, inputHeight);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"BMI healthy weight Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Body Mass Index (BMI) = ${state.bmi}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: state.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputHeight,\n            onChange: handleHeightChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputWeight,\n            onChange: handleWeightChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(BMICalculatorApp, \"wpKlvyjOnq7Y8JXuoUkbuw5Bg+M=\", false, function () {\n  return [useBMI];\n});\n\n_c = BMICalculatorApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"BMICalculatorApp\");","map":{"version":3,"sources":["C:/React/luis-app/src/components/BMICalculatorApp.js"],"names":["React","useState","useEffect","useBMI","BMICalculatorApp","inputHeight","setinputHeight","inputWeight","setinputWeight","state","setState","bmi","status","handleWeightChange","e","target","value","handleInputChange","handleHeightChange","height","weight","calculateBMI","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAElC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,GAAG,EAAE,CAD0B;AAE/BC,IAAAA,MAAM,EAAE;AAFuB,GAAD,CAAlC;;AAKA,QAAMC,kBAAkB,GAAIC,CAAD,IAAO;AAC9BN,IAAAA,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAC,IAAAA,iBAAiB,CAACZ,WAAD,EAAcE,WAAd,CAAjB;AACH,GAHD;;AAKA,QAAMW,kBAAkB,GAAIJ,CAAD,IAAO;AAC9BR,IAAAA,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAC,IAAAA,iBAAiB,CAACZ,WAAD,EAAcE,WAAd,CAAjB;AACH,GAHD;;AAKA,QAAMU,iBAAiB,GAAG,CAACE,MAAD,EAASC,MAAT,KAAoB,CAE7C,CAFD;;AAIAlB,EAAAA,SAAS,CAAC,CAACiB,MAAD,EAASC,MAAT,KAAoB;AAC1BC,IAAAA,YAAY,CAACF,MAAD,EAAQC,MAAR,CAAZ,CAA4BE,IAA5B,CAAkCb,KAAK,IAAG;AACtCC,MAAAA,QAAQ,CAAC;AACLC,QAAAA,GAAG,EAAEF,KAAK,CAACE,GADN;AAELC,QAAAA,MAAM,EAAEH,KAAK,CAACG;AAFT,OAAD,CAAR;AAIH,KALD;AAMH,GAPQ,EAON,CAACO,MAAD,EAASC,MAAT,CAPM,CAAT;AAWA,QAAM;AAACT,IAAAA,GAAD;AAAMC,IAAAA;AAAN,MAAgBT,MAAM,CAACE,WAAD,EAAcA,WAAd,CAA5B;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAA,oBAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,oBAAK,2BAA0BI,KAAK,CAACE,GAAI;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIF,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,kCACI;AACI,YAAA,IAAI,EAAG,QADX;AAEI,YAAA,KAAK,EAAIP,WAFb;AAGI,YAAA,QAAQ,EAAKa;AAHjB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AACI,YAAA,IAAI,EAAG,QADX;AAEI,YAAA,KAAK,EAAIX,WAFb;AAGI,YAAA,QAAQ,EAAKM;AAHjB;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAyBH,CA/DM;;GAAMT,gB;UAoCaD,M;;;KApCbC,gB","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useBMI } from '../hooks/useBMI';\r\n\r\nexport const BMICalculatorApp = () => {\r\n\r\n    const [inputHeight, setinputHeight] = useState(0);\r\n\r\n    const [inputWeight, setinputWeight] = useState(0);\r\n\r\n    const [state, setState] = useState({\r\n        bmi: 0,\r\n        status: \"Normal weight\"\r\n    });\r\n\r\n    const handleWeightChange = (e) => {\r\n        setinputWeight(e.target.value);\r\n        handleInputChange(inputHeight, inputWeight);\r\n    }\r\n\r\n    const handleHeightChange = (e) => {\r\n        setinputHeight(e.target.value);\r\n        handleInputChange(inputHeight, inputWeight);\r\n    }\r\n\r\n    const handleInputChange = (height, weight) => {\r\n        \r\n    }\r\n\r\n    useEffect((height, weight) => {\r\n        calculateBMI(height,weight).then( state =>{\r\n            setState({\r\n                bmi: state.bmi,\r\n                status: state.status\r\n            });\r\n        } )\r\n    }, [height, weight])\r\n\r\n    \r\n\r\n    const {bmi, status} = useBMI(inputHeight, inputHeight);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <h2>{\"BMI healthy weight Calculator\"}</h2>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p>{`Body Mass Index (BMI) = ${state.bmi}`}</p>\r\n                    <p>{state.status}</p>\r\n                    <form>\r\n                        <input \r\n                            type = \"number\"\r\n                            value = {inputHeight}\r\n                            onChange = { handleHeightChange }\r\n                        />\r\n                        <input \r\n                            type = \"number\"\r\n                            value = {inputWeight}\r\n                            onChange = { handleWeightChange }\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}