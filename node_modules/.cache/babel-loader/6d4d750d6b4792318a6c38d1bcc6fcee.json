{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\luis-app\\\\src\\\\components\\\\TimerApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TimerApp = () => {\n  _s();\n\n  const [hour, setHour] = useState({\n    time: {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    },\n    counter: 1,\n    timerId: 0\n  });\n  const {\n    hours,\n    minutes,\n    seconds\n  } = hour.time;\n\n  const handleStart = () => {\n    timerId = setInterval(setTime(), 1000);\n  };\n\n  const setTime = () => {\n    setHour({\n      time: {\n        hours: parseInt(minutes / 60),\n        minutes: parseInt(hour.counter / 60) % 60,\n        seconds: hour.counter % 60\n      },\n      counter: hour.counter + 1\n    });\n  };\n\n  const handleStop = () => {\n    clearInterval();\n  };\n\n  const handleReset = () => {\n    setHour({\n      time: {\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n      },\n      counter: 1\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"SNOW timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: `${hours.toLocaleString('en-US', {\n              minimumIntegerDigits: 2,\n              useGrouping: false\n            })}:${minutes.toLocaleString('en-US', {\n              minimumIntegerDigits: 2,\n              useGrouping: false\n            })}:${seconds.toLocaleString('en-US', {\n              minimumIntegerDigits: 2,\n              useGrouping: false\n            })}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStart,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStop,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TimerApp, \"CKGEAWQsFIgck4oiQ79M+w8E1Is=\");\n\n_c = TimerApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerApp\");","map":{"version":3,"sources":["C:/React/luis-app/src/components/TimerApp.js"],"names":["React","useState","TimerApp","hour","setHour","time","hours","minutes","seconds","counter","timerId","handleStart","setInterval","setTime","parseInt","handleStop","clearInterval","handleReset","toLocaleString","minimumIntegerDigits","useGrouping"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC;AAC7BI,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAK,EAAE,CAAR;AACNC,MAAAA,OAAO,EAAE,CADH;AAENC,MAAAA,OAAO,EAAE;AAFH,KADuB;AAI7BC,IAAAA,OAAO,EAAE,CAJoB;AAK7BC,IAAAA,OAAO,EAAE;AALoB,GAAD,CAAhC;AAQA,QAAM;AAACJ,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA4BL,IAAI,CAACE,IAAvC;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACtBD,IAAAA,OAAO,GAAGE,WAAW,CAACC,OAAO,EAAR,EAAY,IAAZ,CAArB;AACH,GAFD;;AAIA,QAAMA,OAAO,GAAG,MAAK;AACjBT,IAAAA,OAAO,CAAC;AACJC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAK,EAAEQ,QAAQ,CAACP,OAAO,GAAC,EAAT,CAAhB;AACNA,QAAAA,OAAO,EAAEO,QAAQ,CAACX,IAAI,CAACM,OAAL,GAAa,EAAd,CAAR,GAA0B,EAD7B;AAEND,QAAAA,OAAO,EAAGL,IAAI,CAACM,OAAN,GAAe;AAFlB,OADF;AAIJA,MAAAA,OAAO,EAAEN,IAAI,CAACM,OAAL,GAAa;AAJlB,KAAD,CAAP;AAMH,GAPD;;AASA,QAAMM,UAAU,GAAG,MAAM;AACrBC,IAAAA,aAAa;AAChB,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBb,IAAAA,OAAO,CAAC;AACJC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAK,EAAE,CAAR;AACNC,QAAAA,OAAO,EAAE,CADH;AAENC,QAAAA,OAAO,EAAE;AAFH,OADF;AAIJC,MAAAA,OAAO,EAAE;AAJL,KAAD,CAAP;AAMH,GAPD;;AASA,sBACI;AAAA,2BACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,iCACI;AAAA,sBAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAA,sBAAM,GAAEH,KAAK,CAACY,cAAN,CAAqB,OAArB,EAA8B;AAACC,cAAAA,oBAAoB,EAAE,CAAvB;AAA0BC,cAAAA,WAAW,EAAC;AAAtC,aAA9B,CAA4E,IAAGb,OAAO,CAACW,cAAR,CAAuB,OAAvB,EAAgC;AAACC,cAAAA,oBAAoB,EAAE,CAAvB;AAA0BC,cAAAA,WAAW,EAAC;AAAtC,aAAhC,CAA8E,IAAGZ,OAAO,CAACU,cAAR,CAAuB,OAAvB,EAAgC;AAACC,cAAAA,oBAAoB,EAAE,CAAvB;AAA0BC,cAAAA,WAAW,EAAC;AAAtC,aAAhC,CAA8E;AAAtP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,OAAO,EAAET,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,YAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiBH,CAzDM;;GAAMf,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const TimerApp = () => {\r\n\r\n    const [hour, setHour] = useState({\r\n        time: {hours: 0,\r\n        minutes: 0,\r\n        seconds: 0},\r\n        counter: 1,\r\n        timerId: 0\r\n    });\r\n\r\n    const {hours, minutes, seconds} = hour.time;\r\n\r\n\r\n\r\n    const handleStart = () => {\r\n        timerId = setInterval(setTime(), 1000);\r\n    }\r\n\r\n    const setTime = () =>{\r\n        setHour({\r\n            time: {hours: parseInt(minutes/60),\r\n            minutes: parseInt(hour.counter/60)%60, \r\n            seconds: (hour.counter)%60},\r\n            counter: hour.counter+1\r\n        })\r\n    }\r\n\r\n    const handleStop = () => {\r\n        clearInterval();\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setHour({\r\n            time: {hours: 0,\r\n            minutes: 0,\r\n            seconds: 0},\r\n            counter: 1\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header text-center\">\r\n                        <h2>{\"SNOW timer\"}</h2>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h2>{`${hours.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})}:${minutes.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})}:${seconds.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})}`}</h2>\r\n                        <button onClick={handleStart}>Start</button>\r\n                        <button onClick={handleStop}>Stop</button>\r\n                        <button onClick={handleReset}>Reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}