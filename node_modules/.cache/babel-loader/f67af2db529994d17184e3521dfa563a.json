{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\luis-app\\\\src\\\\components\\\\oldtries\\\\FirstTimerApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TimerApp = () => {\n  _s();\n\n  let timerId = 0;\n  const [hour, setHour] = useState({\n    time: {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    },\n    counter: 1,\n    timerOn: false\n  });\n  const {\n    hours,\n    minutes,\n    seconds\n  } = hour.time;\n\n  const handleStart = () => {\n    setHour({\n      time: {\n        hours: parseInt(minutes / 60),\n        minutes: parseInt(hour.counter / 60) % 60,\n        seconds: hour.counter % 60\n      },\n      counter: hour.counter,\n      timerOn: true\n    });\n    timerId = setInterval(setTime(), 1000);\n  };\n\n  const setTime = () => {\n    if (hour.timerOn) {\n      setHour({\n        time: {\n          hours: parseInt(minutes / 60),\n          minutes: parseInt(hour.counter / 60) % 60,\n          seconds: hour.counter % 60\n        },\n        counter: hour.counter + 1,\n        timerOn: true\n      });\n    }\n  };\n\n  const handleStop = () => {\n    setHour({\n      time: {\n        hours: parseInt(minutes / 60),\n        minutes: parseInt(hour.counter / 60) % 60,\n        seconds: hour.counter % 60\n      },\n      counter: hour.counter,\n      timerOn: false\n    });\n    clearInterval(timerId);\n  };\n\n  const handleReset = () => {\n    setHour({\n      time: {\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n      },\n      counter: 1,\n      timerOn: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"SNOW timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: `${hours.toLocaleString('en-US', {\n              minimumIntegerDigits: 2,\n              useGrouping: false\n            })}:${minutes.toLocaleString('en-US', {\n              minimumIntegerDigits: 2,\n              useGrouping: false\n            })}:${seconds.toLocaleString('en-US', {\n              minimumIntegerDigits: 2,\n              useGrouping: false\n            })}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStart,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStop,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TimerApp, \"y/IFAq8H3t0lU+RRY70V7x3qDj4=\");\n\n_c = TimerApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerApp\");","map":{"version":3,"sources":["C:/React/luis-app/src/components/oldtries/FirstTimerApp.js"],"names":["React","useState","TimerApp","timerId","hour","setHour","time","hours","minutes","seconds","counter","timerOn","handleStart","parseInt","setInterval","setTime","handleStop","clearInterval","handleReset","toLocaleString","minimumIntegerDigits","useGrouping"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const TimerApp = () => {\r\n\r\n    let timerId = 0;\r\n\r\n    const [hour, setHour] = useState({\r\n        time: {hours: 0,\r\n        minutes: 0,\r\n        seconds: 0},\r\n        counter: 1,\r\n        timerOn: false\r\n    });\r\n    \r\n    const {hours, minutes, seconds} = hour.time;\r\n\r\n    const handleStart = () => {\r\n        setHour({\r\n            time: {hours: parseInt(minutes/60),\r\n            minutes: parseInt(hour.counter/60)%60, \r\n            seconds: (hour.counter)%60},\r\n            counter: hour.counter,\r\n            timerOn: true\r\n        })\r\n        timerId = setInterval(setTime(), 1000);\r\n    }\r\n\r\n    const setTime = () =>{\r\n        if(hour.timerOn){\r\n            setHour({\r\n                time: {hours: parseInt(minutes/60),\r\n                minutes: parseInt(hour.counter/60)%60, \r\n                seconds: (hour.counter)%60},\r\n                counter: hour.counter+1,\r\n                timerOn: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleStop = () => {\r\n        setHour({\r\n            time: {hours: parseInt(minutes/60),\r\n            minutes: parseInt(hour.counter/60)%60, \r\n            seconds: (hour.counter)%60},\r\n            counter: hour.counter,\r\n            timerOn: false\r\n        })\r\n        clearInterval(timerId);\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setHour({\r\n            time: {hours: 0,\r\n            minutes: 0,\r\n            seconds: 0},\r\n            counter: 1,\r\n            timerOn: true\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header text-center\">\r\n                        <h2>{\"SNOW timer\"}</h2>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h2>{`${hours.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})}:${minutes.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})}:${seconds.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})}`}</h2>\r\n                        <button onClick={handleStart}>Start</button>\r\n                        <button onClick={handleStop}>Stop</button>\r\n                        <button onClick={handleReset}>Reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}