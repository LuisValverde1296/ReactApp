{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { calculateTime } from '../helpers/calculateTime';\nexport const useTimer = state => {\n  _s();\n\n  const [hour, setHour] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    calculateTime(props.counter).then(time => {\n      if (state.timerOn) {\n        setHour({\n          hours: time.hours,\n          minutes: time.minutes,\n          seconds: time.seconds\n        });\n      }\n    });\n  }, [props]);\n  return hour;\n};\n\n_s(useTimer, \"u/NLRsuziPisSBTahjW0gbXAsMg=\");","map":{"version":3,"sources":["C:/React/luis-app/src/hooks/useTimer.js"],"names":["useEffect","useState","calculateTime","useTimer","state","hour","setHour","hours","minutes","seconds","props","counter","then","time","timerOn"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAC7BM,IAAAA,KAAK,EAAE,CADsB;AAE7BC,IAAAA,OAAO,EAAE,CAFoB;AAG7BC,IAAAA,OAAO,EAAE;AAHoB,GAAD,CAAhC;AAMAT,EAAAA,SAAS,CAAC,MAAM;AAEZE,IAAAA,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAb,CACKC,IADL,CACWC,IAAI,IAAG;AACV,UAAGT,KAAK,CAACU,OAAT,EAAiB;AACbR,QAAAA,OAAO,CAAC;AACJC,UAAAA,KAAK,EAAEM,IAAI,CAACN,KADR;AAEJC,UAAAA,OAAO,EAAEK,IAAI,CAACL,OAFV;AAGJC,UAAAA,OAAO,EAAEI,IAAI,CAACJ;AAHV,SAAD,CAAP;AAKH;AACJ,KATL;AAUC,GAZI,EAYF,CAACC,KAAD,CAZE,CAAT;AAcA,SAAOL,IAAP;AACH,CAtBM;;GAAMF,Q","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { calculateTime } from '../helpers/calculateTime';\r\n\r\nexport const useTimer = (state) => {\r\n    const [hour, setHour] = useState({\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        calculateTime(props.counter)\r\n            .then( time =>{\r\n                if(state.timerOn){\r\n                    setHour({\r\n                        hours: time.hours,\r\n                        minutes: time.minutes,\r\n                        seconds: time.seconds\r\n                    });\r\n                }\r\n            } )\r\n        }, [props])\r\n\r\n    return hour;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}