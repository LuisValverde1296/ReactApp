{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\luis-app\\\\src\\\\components\\\\BMICalculatorApp.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useBMI } from '../hooks/useBMI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BMICalculatorApp = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [inputHeight, setinputHeight] = useState(0);\n  const [inputWeight, setinputWeight] = useState(0);\n\n  const handleWeightChange = e => {\n    setinputWeight(e.target.value);\n    handleInputChange(inputHeight, inputWeight);\n  };\n\n  const handleHeightChange = e => {\n    setinputHeight(e.target.value);\n    handleInputChange(inputHeight, inputWeight);\n  };\n\n  const handleInputChange = (height, weight) => {\n    _s();\n\n    useEffect(() => {\n      calculateBMI(height, weight).then(state => {\n        setState({\n          bmi: state.bmi,\n          status: state.status\n        });\n      });\n    }, [height, weight]);\n  };\n\n  _s(handleInputChange, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const {\n    bmi,\n    status\n  } = useBMI(inputHeight, inputHeight);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"BMI healthy weight Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Body Mass Index (BMI) = ${bmi}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputHeight,\n            onChange: handleHeightChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: inputWeight,\n            onChange: handleWeightChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(BMICalculatorApp, \"NW4dBBpJpn4skpL5B33W2kJPUds=\", false, function () {\n  return [useBMI];\n});\n\n_c = BMICalculatorApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"BMICalculatorApp\");","map":{"version":3,"sources":["C:/React/luis-app/src/components/BMICalculatorApp.js"],"names":["React","useState","useEffect","useBMI","BMICalculatorApp","inputHeight","setinputHeight","inputWeight","setinputWeight","handleWeightChange","e","target","value","handleInputChange","handleHeightChange","height","weight","calculateBMI","then","state","setState","bmi","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAAA;;AAElC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMQ,kBAAkB,GAAIC,CAAD,IAAO;AAC9BF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAC,IAAAA,iBAAiB,CAACR,WAAD,EAAcE,WAAd,CAAjB;AACH,GAHD;;AAKA,QAAMO,kBAAkB,GAAIJ,CAAD,IAAO;AAC9BJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAC,IAAAA,iBAAiB,CAACR,WAAD,EAAcE,WAAd,CAAjB;AACH,GAHD;;AAKA,QAAMM,iBAAiB,GAAG,CAACE,MAAD,EAASC,MAAT,KAAoB;AAAA;;AAC1Cd,IAAAA,SAAS,CAAC,MAAM;AACZe,MAAAA,YAAY,CAACF,MAAD,EAAQC,MAAR,CAAZ,CAA4BE,IAA5B,CAAkCC,KAAK,IAAG;AACtCC,QAAAA,QAAQ,CAAC;AACLC,UAAAA,GAAG,EAAEF,KAAK,CAACE,GADN;AAELC,UAAAA,MAAM,EAAEH,KAAK,CAACG;AAFT,SAAD,CAAR;AAIH,OALD;AAMH,KAPQ,EAON,CAACP,MAAD,EAASC,MAAT,CAPM,CAAT;AAQH,GATD;;AAhBkC,KAgB5BH,iBAhB4B;;AA6BlC,QAAM;AAACQ,IAAAA,GAAD;AAAMC,IAAAA;AAAN,MAAgBnB,MAAM,CAACE,WAAD,EAAcA,WAAd,CAA5B;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAA,oBAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,oBAAK,2BAA0BgB,GAAI;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,kCACI;AACI,YAAA,IAAI,EAAG,QADX;AAEI,YAAA,KAAK,EAAIjB,WAFb;AAGI,YAAA,QAAQ,EAAKS;AAHjB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AACI,YAAA,IAAI,EAAG,QADX;AAEI,YAAA,KAAK,EAAIP,WAFb;AAGI,YAAA,QAAQ,EAAKE;AAHjB;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAyBH,CAxDM;;IAAML,gB;UA6BaD,M;;;KA7BbC,gB","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useBMI } from '../hooks/useBMI';\r\n\r\nexport const BMICalculatorApp = () => {\r\n\r\n    const [inputHeight, setinputHeight] = useState(0)\r\n\r\n    const [inputWeight, setinputWeight] = useState(0)\r\n\r\n    const handleWeightChange = (e) => {\r\n        setinputWeight(e.target.value);\r\n        handleInputChange(inputHeight, inputWeight);\r\n    }\r\n\r\n    const handleHeightChange = (e) => {\r\n        setinputHeight(e.target.value);\r\n        handleInputChange(inputHeight, inputWeight);\r\n    }\r\n\r\n    const handleInputChange = (height, weight) => {\r\n        useEffect(() => {\r\n            calculateBMI(height,weight).then( state =>{\r\n                setState({\r\n                    bmi: state.bmi,\r\n                    status: state.status\r\n                });\r\n            } )\r\n        }, [height, weight])\r\n    }\r\n\r\n    \r\n\r\n    const {bmi, status} = useBMI(inputHeight, inputHeight);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <h2>{\"BMI healthy weight Calculator\"}</h2>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p>{`Body Mass Index (BMI) = ${bmi}`}</p>\r\n                    <p>{status}</p>\r\n                    <form>\r\n                        <input \r\n                            type = \"number\"\r\n                            value = {inputHeight}\r\n                            onChange = { handleHeightChange }\r\n                        />\r\n                        <input \r\n                            type = \"number\"\r\n                            value = {inputWeight}\r\n                            onChange = { handleWeightChange }\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}